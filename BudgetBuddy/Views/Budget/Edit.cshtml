@model BudgetBuddy.Models.ViewModels.BudgetViewModel
@{
    ViewData["Title"] = "Edit Budget";
}

<div class="container-fluid">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card bg-white shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <h2 class="card-title mb-0">Edit Budget</h2>
                        <a asp-action="Index" class="btn btn-outline-secondary">
                            <i class="bi bi-arrow-left"></i> Back to List
                        </a>
                    </div>

                    <form asp-action="Edit" method="post" id="budgetForm">
                        <input type="hidden" asp-for="BudgetId" />
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>

                        <div class="row">
                            <!-- Category Selection -->
                            <div class="col-md-6 mb-3">
                                <label asp-for="CategoryId" class="form-label required">Category</label>
                                <select asp-for="CategoryId" class="form-select" required>
                                    <option value="">Select a category</option>
                                    @foreach (var category in Model.Categories)
                                    {
                                        <option value="@category.CategoryId" 
                                                @(category.CategoryId == Model.CategoryId ? "selected" : "")>
                                            @category.Name
                                        </option>
                                    }
                                </select>
                                <span asp-validation-for="CategoryId" class="text-danger"></span>
                            </div>

                            <!-- Budget Amount -->
                            <div class="col-md-6 mb-3">
                                <label asp-for="Amount" class="form-label required">Budget Amount</label>
                                <div class="input-group">
                                    <span class="input-group-text">$</span>
                                    <input asp-for="Amount" class="form-control" type="number" step="0.01" min="0.01" required />
                                </div>
                                <span asp-validation-for="Amount" class="text-danger"></span>
                            </div>
                        </div>

                        <!-- Date Range -->
                        <div class="row mb-4">
                            <div class="col-md-6">
                                <label asp-for="StartDate" class="form-label required">Start Date</label>
                                <input asp-for="StartDate" class="form-control" type="date" required 
                                       value="@Model.StartDate.ToString("yyyy-MM-dd")" />
                                <span asp-validation-for="StartDate" class="text-danger"></span>
                            </div>
                            <div class="col-md-6">
                                <label asp-for="EndDate" class="form-label required">End Date</label>
                                <input asp-for="EndDate" class="form-control" type="date" required 
                                       value="@Model.EndDate.ToString("yyyy-MM-dd")" />
                                <span asp-validation-for="EndDate" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="d-flex justify-content-between">
                            <!-- Delete Button -->
                            <button type="button" class="btn btn-outline-danger" onclick="confirmDelete(@Model.BudgetId)">
                                <i class="bi bi-trash"></i> Delete Budget
                            </button>
                            
                            <!-- Save Button -->
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-check-circle"></i> Save Changes
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this budget?</p>
                <p class="text-danger"><small>This action cannot be undone.</small></p>
            </div>
            <div class="modal-footer">
                <form id="deleteForm" asp-action="Delete" method="post">
                    <input type="hidden" name="id" value="@Model.BudgetId" />
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .required:after {
            content: " *";
            color: red;
        }
    </style>
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        $(document).ready(function() {
            // Date range validation
            $('#budgetForm').submit(function(e) {
                const startDate = new Date($('#StartDate').val());
                const endDate = new Date($('#EndDate').val());

                if (startDate > endDate) {
                    e.preventDefault();
                    Swal.fire({
                        title: 'Invalid Date Range',
                        text: 'End date must be after start date',
                        icon: 'error',
                        confirmButtonColor: '#3085d6'
                    });
                }
            });

            // Amount validation
            $('#Amount').on('input', function() {
                const amount = parseFloat($(this).val());
                if (amount <= 0) {
                    $(this).addClass('is-invalid');
                } else {
                    $(this).removeClass('is-invalid');
                }
            });

            // Category select validation
            $('#CategoryId').change(function() {
                if ($(this).val()) {
                    $(this).removeClass('is-invalid');
                } else {
                    $(this).addClass('is-invalid');
                }
            });
        });

        // Delete confirmation
        function confirmDelete(id) {
            var deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
            deleteModal.show();
        }
    </script>
}