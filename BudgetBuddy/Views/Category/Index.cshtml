@model IEnumerable<BudgetBuddy.Models.ViewModels.CategoryViewModel>
@{
    ViewData["Title"] = "Categories";
    var currentUser = User.Identity.Name;
    var isAdmin = User.IsInRole("Admin");
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>Category Management</h2>
        <div>
            @if (User.IsInRole("Admin"))
            {
                <a asp-action="CreatePredefined" class="btn btn-success me-2"><i class="bi bi-plus-circle"></i> Add System Category</a>
            }
            <a asp-action="Create" class="btn btn-primary"><i class="bi bi-plus-circle"></i> Add Category</a>
        </div>
    </div>

    <div class="card shadow-sm">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped table-bordered">
                    <thead>
                        <tr>
                            <th>Category Name</th>
                            <th>Type</th>
                            <th>Expenses Count</th>
                            <th>Total Expenses</th>
                            <th>Created By</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@item.Name @if (item.IsPredefined) { <span class="badge bg-info">Predefined</span> }</td>
                                <td>@item.CategoryType</td>
                                <td>@item.ExpenseCount</td>
                                <td>@item.TotalExpenses.ToString("C")</td>
                                <td>@item.CreatedByUser</td>
                                <td>
                                    <div class="btn-group" role="group">
                                        @if (item.CanEdit)
                                        {
                                            <a asp-action="Edit" asp-route-id="@item.CategoryId" class="btn btn-sm btn-outline-primary"><i class="bi bi-pencil"></i></a>
                                        }
                                        @if (item.CanDelete)
                                        {
                                            <form asp-action="Delete" asp-route-id="@item.CategoryId" method="post" onsubmit="return confirm('Are you sure you want to delete this category?');">
                                                <button type="submit" class="btn btn-sm btn-outline-danger"><i class="bi bi-trash"></i></button>
                                            </form>
                                        }
                                        @if (!item.CanEdit && !item.CanDelete)
                                        {
                                            <span class="text-muted fst-italic">No actions available</span>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this category?</p>
                <div id="expenseWarning" class="alert alert-warning" style="display: none;">
                    <i class="bi bi-exclamation-triangle"></i>
                    This category has associated expenses. You cannot delete it until all expenses are moved or deleted.
                </div>
            </div>
            <div class="modal-footer">
                <form id="deleteForm" asp-action="Delete" method="post">
                    <input type="hidden" id="categoryId" name="id" />
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" id="deleteButton" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Initialize tooltips
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl);
        });

        // Show success message if exists
        @if (TempData["Success"] != null)
        {
            <text>
                Swal.fire({
                    title: 'Success!',
                    text: '@TempData["Success"]',
                    icon: 'success',
                    confirmButtonColor: '#3085d6'
                });
            </text>
        }

        // Show error message if exists
        @if (TempData["Error"] != null)
        {
            <text>
                Swal.fire({
                    title: 'Error!',
                    text: '@TempData["Error"]',
                    icon: 'error',
                    confirmButtonColor: '#3085d6'
                });
            </text>
        }

        // Delete confirmation
        function confirmDelete(id, expenseCount) {
            document.getElementById('categoryId').value = id;
            const expenseWarning = document.getElementById('expenseWarning');
            const deleteButton = document.getElementById('deleteButton');

            if (expenseCount > 0) {
                expenseWarning.style.display = 'block';
                deleteButton.disabled = true;
            } else {
                expenseWarning.style.display = 'none';
                deleteButton.disabled = false;
            }

            var deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
            deleteModal.show();
        }
    </script>
}