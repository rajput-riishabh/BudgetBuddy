@model BudgetBuddy.Models.ViewModels.CategoryViewModel
@{
    ViewData["Title"] = "Edit Category";
    var isAdmin = User.IsInRole("Admin");
    var currentUser = User.Identity.Name;
    var currentDate = DateTime.Now;
}

<div class="container-fluid">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card bg-white shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <div>
                            <h2 class="card-title mb-1">Edit Category</h2>
                            <p class="text-muted mb-0">
                                @if (Model.IsPredefined)
                                {
                                    <span class="badge bg-info me-2">System Category</span>
                                }
                                else
                                {
                                    <span class="badge bg-success me-2">Custom Category</span>
                                }
                                @if (isAdmin && Model.IsPredefined)
                                {
                                    <span>Editing as Administrator</span>
                                }
                                else if (isAdmin && !Model.IsPredefined)
                                {
                                    <span>Editing as @currentUser</span>
                                }
                                else
                                {
                                    <span>Editing as @currentUser</span>
                                }
                            </p>
                        </div>
                        <a asp-action="Index" class="btn btn-outline-secondary">
                            <i class="bi bi-arrow-left"></i> Back to List
                        </a>
                    </div>

                    @if (Model.IsPredefined && !isAdmin)
                    {
                        <div class="alert alert-warning mb-4" role="alert">
                            <i class="bi bi-exclamation-triangle me-2"></i>
                            <strong>Note:</strong> This is a system category and can only be edited by administrators.
                        </div>
                    }

                    <form asp-action="Edit" method="post" id="editCategoryForm">
                        <input type="hidden" asp-for="CategoryId" />
                        <input type="hidden" asp-for="IsPredefined" />
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>

                        <!-- Category Status -->
                        <div class="mb-4">
                            <div class="card bg-light">
                                <div class="card-body">
                                    <h6 class="card-subtitle mb-2">Category Status</h6>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <p class="mb-1">
                                                <i class="bi bi-tag"></i>
                                                Type: @(Model.IsPredefined ? "System Category" : "Custom Category")
                                            </p>
                                            <p class="mb-1">
                                                <i class="bi bi-person"></i>
                                                Last modified by: @currentUser
                                            </p>
                                        </div>
                                        <div class="col-md-6">
                                            <p class="mb-1">
                                                <i class="bi bi-calendar"></i>
                                                Last modified: @currentDate.ToString("yyyy-MM-dd HH:mm:ss")
                                            </p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Category Name -->
                        <div class="mb-4">
                            <label asp-for="Name" class="form-label required">Category Name</label>
                            <div class="input-group">
                                <span class="input-group-text">
                                    <i class="bi bi-tag"></i>
                                </span>
                                <input asp-for="Name" class="form-control" 
                                       placeholder="Enter category name"
                                       maxlength="50" 
                                       required
                                       readonly="@(!isAdmin && Model.IsPredefined)" />
                            </div>
                            <span asp-validation-for="Name" class="text-danger"></span>
                            <div class="form-text">
                                <span id="nameCharCount">0</span>/50 characters
                            </div>
                            <div class="form-text">
                                <i class="bi bi-info-circle"></i>
                                Use a clear, descriptive name. Only letters, numbers, spaces, & and - are allowed.
                            </div>
                        </div>

                        <!-- Action Buttons -->
                        <div class="d-flex justify-content-between">
                            @if (!Model.IsPredefined || isAdmin)
                            {
                                <!-- Delete Button -->
                                <button type="button" class="btn btn-outline-danger" onclick="confirmDelete(@Model.CategoryId)">
                                    <i class="bi bi-trash"></i> Delete Category
                                </button>
                                
                                <!-- Save Button -->
                                <button type="submit" class="btn btn-primary">
                                    <i class="bi bi-check-circle"></i> Save Changes
                                </button>
                            }
                            else
                            {
                                <div></div> <!-- Empty div for flex spacing -->
                                <button type="button" class="btn btn-secondary" onclick="window.history.back()">
                                    <i class="bi bi-x-circle"></i> Close
                                </button>
                            }
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this category?</p>
                <p class="text-danger"><small>This action cannot be undone.</small></p>
                @if (Model.IsPredefined)
                {
                    <div class="alert alert-warning">
                        <i class="bi bi-exclamation-triangle"></i>
                        Warning: This is a system category. Deleting it may affect system functionality.
                    </div>
                }
            </div>
            <div class="modal-footer">
                <form id="deleteForm" asp-action="Delete" method="post">
                    <input type="hidden" name="id" value="@Model.CategoryId" />
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .required:after {
            content: " *";
            color: red;
        }
    </style>
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        $(document).ready(function() {
            const nameInput = document.querySelector('#Name');
            const charCount = document.querySelector('#nameCharCount');
            const form = document.querySelector('#editCategoryForm');

            // Character counter
            function updateCharCount() {
                const currentLength = nameInput.value.length;
                charCount.textContent = currentLength;
                
                if (currentLength >= 45) {
                    charCount.classList.add('text-danger');
                } else {
                    charCount.classList.remove('text-danger');
                }
            }

            // Update on input
            nameInput.addEventListener('input', function(e) {
                updateCharCount();
                
                // Validate input characters
                const regex = /^[a-zA-Z0-9\s&-]*$/;
                if (!regex.test(e.target.value)) {
                    e.target.classList.add('is-invalid');
                } else {
                    e.target.classList.remove('is-invalid');
                }
            });

            // Initial count
            updateCharCount();

            // Form validation
            form.addEventListener('submit', function(e) {
                if (nameInput.value.trim().length < 2) {
                    e.preventDefault();
                    Swal.fire({
                        title: 'Validation Error',
                        text: 'Category name must be at least 2 characters long',
                        icon: 'error',
                        confirmButtonColor: '#3085d6'
                    });
                }
            });
        });

        // Show success message if exists
        @if (TempData["Success"] != null)
        {
            <text>
            Swal.fire({
                title: 'Success!',
                text: '@TempData["Success"]',
                icon: 'success',
                confirmButtonColor: '#3085d6'
            });
            </text>
        }

        // Delete confirmation
        function confirmDelete(id) {
            var deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
            deleteModal.show();
        }
    </script>
}