@model BudgetBuddy.Models.ViewModels.ReportIndexViewModel
@{
    ViewData["Title"] = "Expense Report";
    var currentUser = "rajput-riishabh";
    var currentDate = DateTime.Parse("2025-03-11 12:30:21");
}

<div class="container-fluid">
    <!-- Header Section -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h2 class="mb-1">Expense Report</h2>
            <p class="text-muted mb-0">
                <i class="bi bi-calendar-range"></i>
                @Model.StartDate.ToString("MMM d, yyyy") - @Model.EndDate.ToString("MMM d, yyyy")
            </p>
        </div>
        <div class="btn-group">
            <button type="button" class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#dateRangeModal">
                <i class="bi bi-calendar"></i> Change Date Range
            </button>
            <a asp-action="Export"
               asp-route-startDate="@Model.StartDate.ToString("yyyy-MM-dd")"
               asp-route-endDate="@Model.EndDate.ToString("yyyy-MM-dd")"
               class="btn btn-outline-success">
                <i class="bi bi-download"></i> Export CSV
            </a>
        </div>
    </div>

    <!-- Summary Cards -->
    <div class="row mb-4">
        <!-- Total Expenses Card -->
        <div class="col-md-3">
            <div class="card bg-white shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="card-subtitle mb-2 text-muted">Total Expenses</h6>
                            <h2 class="card-text text-danger mb-0">@Model.TotalExpenses.ToString("C")</h2>
                        </div>
                        <div class="rounded-circle bg-danger bg-opacity-10 p-3">
                            <i class="bi bi-cash text-danger fs-4"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Budget Status Card -->
        <div class="col-md-3">
            <div class="card bg-white shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="card-subtitle mb-2 text-muted">Budget Status</h6>
                            <h2 class="card-text @(Model.RemainingBudget < 0 ? "text-danger" : "text-success") mb-0">
                                @Model.RemainingBudget.ToString("C")
                            </h2>
                        </div>
                        <div class="rounded-circle bg-@(Model.RemainingBudget < 0 ? "danger" : "success") bg-opacity-10 p-3">
                            <i class="bi bi-wallet2 text-@(Model.RemainingBudget < 0 ? "danger" : "success") fs-4"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Transaction Count Card -->
        <div class="col-md-3">
            <div class="card bg-white shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="card-subtitle mb-2 text-muted">Transactions</h6>
                            <h2 class="card-text text-primary mb-0">@Model.ExpenseCount</h2>
                        </div>
                        <div class="rounded-circle bg-primary bg-opacity-10 p-3">
                            <i class="bi bi-receipt text-primary fs-4"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Categories Used Card -->
        <div class="col-md-3">
            <div class="card bg-white shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="card-subtitle mb-2 text-muted">Categories Used</h6>
                            <h2 class="card-text text-info mb-0">@Model.CategoryExpenses.Count</h2>
                        </div>
                        <div class="rounded-circle bg-info bg-opacity-10 p-3">
                            <i class="bi bi-tags text-info fs-4"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Category Breakdown -->
        <div class="col-md-8 mb-4">
            <div class="card bg-white shadow-sm">
                <div class="card-body">
                    <h5 class="card-title">Category Breakdown</h5>
                    <div class="table-responsive">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Category</th>
                                    <th>Transactions</th>
                                    <th>Amount</th>
                                    <th>Budget</th>
                                    <th>Progress</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var category in Model.CategoryExpenses)
                                {
                                    var progressClass = category.BudgetUsagePercentage switch
                                    {
                                        >= 100 => "danger",
                                        >= 75 => "warning",
                                        _ => "success"
                                    };

                                    <tr>
                                        <td>
                                            @category.CategoryName
                                            @if (category.IsPredefined)
                                            {
                                                <span class="badge bg-info ms-2">System</span>
                                            }
                                        </td>
                                        <td>@category.ExpenseCount</td>
                                        <td>@category.TotalAmount.ToString("C")</td>
                                        <td>@category.BudgetAmount.ToString("C")</td>
                                        <td style="width: 30%">
                                            <div class="progress">
                                                <div class="progress-bar bg-@progressClass"
                                                     role="progressbar"
                                                     style="width: @Math.Min(category.BudgetUsagePercentage, 100)%">
                                                    @category.BudgetUsagePercentage.ToString("F0")%
                                                </div>
                                            </div>
                                        </td>
                                        <td>
                                            <a asp-action="CategoryDetails"
                                               asp-route-id="@category.CategoryId"
                                               asp-route-startDate="@Model.StartDate.ToString("yyyy-MM-dd")"
                                               asp-route-endDate="@Model.EndDate.ToString("yyyy-MM-dd")"
                                               class="btn btn-sm btn-outline-primary">
                                                Details
                                            </a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <!-- Daily Expenses Chart -->
        <div class="col-md-4 mb-4">
            <div class="card bg-white shadow-sm">
                <div class="card-body">
                    <h5 class="card-title">Daily Expenses</h5>
                    <canvas id="dailyExpensesChart"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- Recent Transactions -->
    <div class="card bg-white shadow-sm">
        <div class="card-body">
            <h5 class="card-title">Daily Breakdown</h5>
            <div class="table-responsive">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Date</th>
                            <th>Transactions</th>
                            <th>Total Amount</th>
                            <th>Average Per Transaction</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var daily in Model.DailyExpenses)
                        {
                            <tr>
                                <td>@daily.Date.ToString("MMM d, yyyy")</td>
                                <td>@daily.ExpenseCount</td>
                                <td>@daily.TotalAmount.ToString("C")</td>
                                <td>@((daily.TotalAmount / daily.ExpenseCount).ToString("C"))</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Date Range Modal -->
<div class="modal fade" id="dateRangeModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Select Date Range</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="dateRangeForm" asp-action="Index" method="get">
                    <div class="mb-3">
                        <label class="form-label">Start Date</label>
                        <input type="date" name="startDate" class="form-control"
                               value="@Model.StartDate.ToString("yyyy-MM-dd")" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">End Date</label>
                        <input type="date" name="endDate" class="form-control"
                               value="@Model.EndDate.ToString("yyyy-MM-dd")" required />
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="submit" form="dateRangeForm" class="btn btn-primary">Apply</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
        // Daily Expenses Chart
        const ctx = document.getElementById('dailyExpensesChart').getContext('2d');
        new Chart(ctx, {
            type: 'line',
            data: {
                labels: @Json.Serialize(Model.DailyExpenses.Select(d => d.Date.ToString("MMM d"))),
                datasets: [{
                    label: 'Daily Expenses',
                    data: @Json.Serialize(Model.DailyExpenses.Select(d => d.TotalAmount)),
                    borderColor: 'rgb(75, 192, 192)',
                    tension: 0.1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: true,
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            callback: function(value) {
                                return '₹' + value.toFixed(2);
                            }
                        }
                    }
                },
                plugins: {
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                return '₹' + context.raw.toFixed(2);
                            }
                        }
                    }
                }
            }
        });

        // Date range validation
        document.getElementById('dateRangeForm').addEventListener('submit', function(e) {
            const startDate = new Date(this.startDate.value);
            const endDate = new Date(this.endDate.value);

            if (startDate > endDate) {
                e.preventDefault();
                Swal.fire({
                    title: 'Invalid Date Range',
                    text: 'End date must be after start date',
                    icon: 'error',
                    confirmButtonColor: '#3085d6'
                });
            }
        });
    </script>
}